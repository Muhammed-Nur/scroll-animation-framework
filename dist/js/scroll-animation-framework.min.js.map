{"version":3,"sources":["scroll-animation-framework.js"],"names":["scrollAnimator","ScrollAnimationFramework","_createClass","config","arguments","length","undefined","_classCallCheck","this","_objectSpread","threshold","rootMargin","defaultAnimation","defaultDuration","defaultDelay","staggerDelay","debug","performanceMonitor","selectors","trigger","animation","duration","rubberBand","shakeY","headShake","tada","wobble","jello","container","backInDown","backInLeft","backInRight","backInUp","backOutLeft","backOutRight","bounceIn","bounceInRight","bounceOut","bounceOutDown","bounceOutUp","fadeInDown","fadeInRight","fadeInRightBig","fadeInTopLeft","fadeInTopRight","fadeOutDownBig","fadeOutLeft","fadeOutRightBig","heartBeat","fadeOutTopRight","fadeOutBottomRight","flip","flipOutY","lightSpeedInLeft","lightSpeedOutRight","rotateIn","backOutDown","rotateInUpRight","rotateOutDownLeft","slideInRight","slideInUp","slideOutLeft","bounceInDown","bounceInLeft","zoomInRight","zoomOut","bounceInUp","zoomOutUp","rollIn","fade","bounceOutLeft","slide-right","bounceOutRight","jack","classMappings","card","hero-title","testimonial","onAllAnimationsComplete","fadeInLeftBig","Set","containerElements","Map","performanceMetrics","key","value","readyState","document","addEventListener","_this","setup","scanForElements","fadeInBottomLeft","_this2","fadeOutDown","IntersectionObserver","entries","forEach","entry","isIntersecting","intersectionRatio","handleElementAnimation","target","fadeOutRight","scanClassBasedElements","totalElements","observedElements","size","_this3","querySelectorAll","animated","element","fadeOutUpBig","matches","ignore","prepareElement","observer","observe","add","_this4","Array","from","children","containerConfig","parseDataAttributes","fadeOutBottomLeft","parseInt","stagger","child","index","childConfig","delay","_this5","Object","_ref","_ref2","_slicedToArray","className","preset","selector","concat","presetConfig","presets","lightSpeedInRight","dataset","scrollPrepared","animate","rotateInDownLeft","assign","elementConfig","opacity","visibility","classList","startsWith","rotateOutUpLeft","remove","startTime","slideInDown","has","performance","now","_scrollConfig","animatedElements","slideInLeft","unobserve","push","endTime","animatedCount","onElementAnimated","_this6","slideOutUp","setTimeout","zoomOutDown","event","handleAnimationComplete","removeEventListener","handleAnimationEnd","zoomInUp","style","setProperty","once","zoomInLeft","fallbackTimeout","parseDuration","contains","rollOut","durationStr","toString","match","parseFloat","callback","window","CustomEvent","detail","stats","prefix","camelPrefix","scrollAnimate","scrollAnimation","button","scrollDuration","scrollDelay","scrollCallback","replace","letter","toUpperCase","configKey","slice","charAt","toLowerCase","includes","isNaN","createObserver","Number","_this7","MutationObserver","mutations","hasNewElements","mutation","options","addedNodes","node","updateStats","body","childList","subtree","scanContainerElements","_toConsumableArray","keys","map","cls","_this8","scanAnimatedElements","elements","handleReducedMotion","e","documentElement","_this9","prefersReducedMotion","matchMedia","lastTime","measureFPS","_this0","frameCount","currentTime","round","requestAnimationFrame","_this1","panel","getElementById","updateDebugPanel","setInitialState","setInterval","observedEl","classes","animatedEl","textContent","performanceEl","avgTime","reduce","a","b","toFixed","animateElement","_this10","disconnect","newConfig","unit","clear","isAnimated","removeProperty","toggleDebug","querySelector","SCROLL_ANIMATOR_AUTO_INIT","_scrollAnimator2","_scrollAnimator","pauseAnimations","resumeAnimations","module","exports"],"mappings":"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","file":"scroll-animation-framework.min.js","sourcesContent":["/**\n * Advanced Scroll Animation Framework with Animate.css Integration\n * Modern, performant, and flexible scroll animation system\n * 000660010500115001090010500108001080009700104001050011400114000970010400109000970011000105001140011400097001040010500109\n */\nclass ScrollAnimationFramework {\n    constructor(config = {}) {\n        this.config = {\n            // Basic settings\n            threshold: [0, 0.1, 0.25, 0.5, 0.75, 1.0],\n            rootMargin: \"0px 0px -100px 0px\",\n\n            // Animation settings\n            defaultAnimation: \"fadeInUp\",\n            defaultDuration: \"1s\",\n            defaultDelay: 0,\n\n            // Stagger settings\n            staggerDelay: 150,\n\n            // Debug settings\n            debug: false,\n            performanceMonitor: false,\n\n            // Selectors\n            selectors: {\n                animated: \"[data-scroll-animate]\",\n                container: \"[data-scroll-container]\",\n                trigger: \"[data-scroll-trigger]\",\n                ignore: \"[data-scroll-ignore]\",\n            },\n\n            // Animation presets with correct Animate.css classes\n            presets: {\n                // Attention Seekers\n                bounce: { animation: \"bounce\", duration: \"1s\" },\n                flash: { animation: \"flash\", duration: \"1s\" },\n                pulse: { animation: \"pulse\", duration: \"1s\" },\n                rubberBand: { animation: \"rubberBand\", duration: \"1s\" },\n                shakeX: { animation: \"shakeX\", duration: \"1s\" },\n                shakeY: { animation: \"shakeY\", duration: \"1s\" },\n                headShake: { animation: \"headShake\", duration: \"1s\" },\n                swing: { animation: \"swing\", duration: \"1s\" },\n                tada: { animation: \"tada\", duration: \"1s\" },\n                wobble: { animation: \"wobble\", duration: \"1s\" },\n                jello: { animation: \"jello\", duration: \"1s\" },\n                heartBeat: { animation: \"heartBeat\", duration: \"1.3s\" },\n\n                // Back Entrances\n                backInDown: { animation: \"backInDown\", duration: \"1s\" },\n                backInLeft: { animation: \"backInLeft\", duration: \"1s\" },\n                backInRight: { animation: \"backInRight\", duration: \"1s\" },\n                backInUp: { animation: \"backInUp\", duration: \"1s\" },\n\n                // Back Exits\n                backOutDown: { animation: \"backOutDown\", duration: \"1s\" },\n                backOutLeft: { animation: \"backOutLeft\", duration: \"1s\" },\n                backOutRight: { animation: \"backOutRight\", duration: \"1s\" },\n                backOutUp: { animation: \"backOutUp\", duration: \"1s\" },\n\n                // Bouncing Entrances\n                bounceIn: { animation: \"bounceIn\", duration: \"0.75s\" },\n                bounceInDown: { animation: \"bounceInDown\", duration: \"1s\" },\n                bounceInLeft: { animation: \"bounceInLeft\", duration: \"1s\" },\n                bounceInRight: { animation: \"bounceInRight\", duration: \"1s\" },\n                bounceInUp: { animation: \"bounceInUp\", duration: \"1s\" },\n\n                // Bouncing Exits\n                bounceOut: { animation: \"bounceOut\", duration: \"0.75s\" },\n                bounceOutDown: { animation: \"bounceOutDown\", duration: \"1s\" },\n                bounceOutLeft: { animation: \"bounceOutLeft\", duration: \"1s\" },\n                bounceOutRight: { animation: \"bounceOutRight\", duration: \"1s\" },\n                bounceOutUp: { animation: \"bounceOutUp\", duration: \"1s\" },\n\n                // Fading Entrances\n                fadeIn: { animation: \"fadeIn\", duration: \"1s\" },\n                fadeInDown: { animation: \"fadeInDown\", duration: \"1s\" },\n                fadeInDownBig: { animation: \"fadeInDownBig\", duration: \"1.3s\" },\n                fadeInLeft: { animation: \"fadeInLeft\", duration: \"1s\" },\n                fadeInLeftBig: { animation: \"fadeInLeftBig\", duration: \"1.3s\" },\n                fadeInRight: { animation: \"fadeInRight\", duration: \"1s\" },\n                fadeInRightBig: { animation: \"fadeInRightBig\", duration: \"1.3s\" },\n                fadeInUp: { animation: \"fadeInUp\", duration: \"1s\" },\n                fadeInUpBig: { animation: \"fadeInUpBig\", duration: \"1.3s\" },\n                fadeInTopLeft: { animation: \"fadeInTopLeft\", duration: \"1s\" },\n                fadeInTopRight: { animation: \"fadeInTopRight\", duration: \"1s\" },\n                fadeInBottomLeft: { animation: \"fadeInBottomLeft\", duration: \"1s\" },\n                fadeInBottomRight: { animation: \"fadeInBottomRight\", duration: \"1s\" },\n\n                // Fading Exits\n                fadeOut: { animation: \"fadeOut\", duration: \"1s\" },\n                fadeOutDown: { animation: \"fadeOutDown\", duration: \"1s\" },\n                fadeOutDownBig: { animation: \"fadeOutDownBig\", duration: \"1.3s\" },\n                fadeOutLeft: { animation: \"fadeOutLeft\", duration: \"1s\" },\n                fadeOutLeftBig: { animation: \"fadeOutLeftBig\", duration: \"1.3s\" },\n                fadeOutRight: { animation: \"fadeOutRight\", duration: \"1s\" },\n                fadeOutRightBig: { animation: \"fadeOutRightBig\", duration: \"1.3s\" },\n                fadeOutUp: { animation: \"fadeOutUp\", duration: \"1s\" },\n                fadeOutUpBig: { animation: \"fadeOutUpBig\", duration: \"1.3s\" },\n                fadeOutTopLeft: { animation: \"fadeOutTopLeft\", duration: \"1s\" },\n                fadeOutTopRight: { animation: \"fadeOutTopRight\", duration: \"1s\" },\n                fadeOutBottomRight: { animation: \"fadeOutBottomRight\", duration: \"1s\" },\n                fadeOutBottomLeft: { animation: \"fadeOutBottomLeft\", duration: \"1s\" },\n\n                // Flippers\n                flip: { animation: \"flip\", duration: \"1s\" },\n                flipInX: { animation: \"flipInX\", duration: \"1s\" },\n                flipInY: { animation: \"flipInY\", duration: \"1s\" },\n                flipOutX: { animation: \"flipOutX\", duration: \"0.75s\" },\n                flipOutY: { animation: \"flipOutY\", duration: \"0.75s\" },\n\n                // Lightspeed\n                lightSpeedInRight: { animation: \"lightSpeedInRight\", duration: \"1s\" },\n                lightSpeedInLeft: { animation: \"lightSpeedInLeft\", duration: \"1s\" },\n                lightSpeedOutRight: { animation: \"lightSpeedOutRight\", duration: \"1s\" },\n                lightSpeedOutLeft: { animation: \"lightSpeedOutLeft\", duration: \"1s\" },\n\n                // Rotating Entrances\n                rotateIn: { animation: \"rotateIn\", duration: \"1s\" },\n                rotateInDownLeft: { animation: \"rotateInDownLeft\", duration: \"1s\" },\n                rotateInDownRight: { animation: \"rotateInDownRight\", duration: \"1s\" },\n                rotateInUpLeft: { animation: \"rotateInUpLeft\", duration: \"1s\" },\n                rotateInUpRight: { animation: \"rotateInUpRight\", duration: \"1s\" },\n\n                // Rotating Exits\n                rotateOut: { animation: \"rotateOut\", duration: \"1s\" },\n                rotateOutDownLeft: { animation: \"rotateOutDownLeft\", duration: \"1s\" },\n                rotateOutDownRight: { animation: \"rotateOutDownRight\", duration: \"1s\" },\n                rotateOutUpLeft: { animation: \"rotateOutUpLeft\", duration: \"1s\" },\n                rotateOutUpRight: { animation: \"rotateOutUpRight\", duration: \"1s\" },\n\n                // Sliding Entrances\n                slideInDown: { animation: \"slideInDown\", duration: \"1s\" },\n                slideInLeft: { animation: \"slideInLeft\", duration: \"1s\" },\n                slideInRight: { animation: \"slideInRight\", duration: \"1s\" },\n                slideInUp: { animation: \"slideInUp\", duration: \"1s\" },\n\n                // Sliding Exits\n                slideOutDown: { animation: \"slideOutDown\", duration: \"1s\" },\n                slideOutLeft: { animation: \"slideOutLeft\", duration: \"1s\" },\n                slideOutRight: { animation: \"slideOutRight\", duration: \"1s\" },\n                slideOutUp: { animation: \"slideOutUp\", duration: \"1s\" },\n\n                // Zooming Entrances\n                zoomIn: { animation: \"zoomIn\", duration: \"1s\" },\n                zoomInDown: { animation: \"zoomInDown\", duration: \"1s\" },\n                zoomInLeft: { animation: \"zoomInLeft\", duration: \"1s\" },\n                zoomInRight: { animation: \"zoomInRight\", duration: \"1s\" },\n                zoomInUp: { animation: \"zoomInUp\", duration: \"1s\" },\n\n                // Zooming Exits\n                zoomOut: { animation: \"zoomOut\", duration: \"1s\" },\n                zoomOutDown: { animation: \"zoomOutDown\", duration: \"1.5s\" },\n                zoomOutLeft: { animation: \"zoomOutLeft\", duration: \"1s\" },\n                zoomOutRight: { animation: \"zoomOutRight\", duration: \"1s\" },\n                zoomOutUp: { animation: \"zoomOutUp\", duration: \"1s\" },\n\n                // Specials\n                hinge: { animation: \"hinge\", duration: \"2s\" },\n                jackInTheBox: { animation: \"jackInTheBox\", duration: \"1s\" },\n                rollIn: { animation: \"rollIn\", duration: \"1s\" },\n                rollOut: { animation: \"rollOut\", duration: \"1s\" },\n\n                // Common shortcuts for easier usage\n                fade: { animation: \"fadeIn\", duration: \"0.8s\" },\n                \"slide-up\": { animation: \"fadeInUp\", duration: \"0.8s\" },\n                \"slide-down\": { animation: \"fadeInDown\", duration: \"0.8s\" },\n                \"slide-left\": { animation: \"fadeInLeft\", duration: \"0.8s\" },\n                \"slide-right\": { animation: \"fadeInRight\", duration: \"0.8s\" },\n                zoom: { animation: \"zoomIn\", duration: \"0.6s\" },\n                elastic: { animation: \"bounceIn\", duration: \"1.2s\" },\n                attention: { animation: \"pulse\", duration: \"1s\" },\n                jack: { animation: \"jackInTheBox\", duration: \"1s\" },\n            },\n\n            // Auto class detection mappings\n            classMappings: {\n                card: \"slide-up\",\n                \"hero-title\": \"fade\",\n                \"stats-item\": \"bounce\",\n                \"feature-box\": \"slide-left\",\n                testimonial: \"slide-right\",\n                \"section-title\": \"slide-down\",\n                button: \"bounce\",\n                \"demo-card\": \"zoom\",\n            },\n\n            // Callbacks\n            onElementAnimated: null,\n            onAllAnimationsComplete: null,\n\n            ...config,\n        };\n\n        this.observer = null;\n        this.animatedElements = new Set();\n        this.observedElements = new Set();\n        this.containerElements = new Map();\n        this.stats = {\n            totalElements: 0,\n            animatedCount: 0,\n            performanceMetrics: [],\n        };\n\n        this.init();\n    }\n\n    init() {\n        if (document.readyState === \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", () => this.setup());\n        } else {\n            this.setup();\n        }\n    }\n\n    setup() {\n        this.createObserver();\n        this.scanForElements();\n        this.setupMutationObserver();\n        this.setupAccessibility();\n        this.setupPerformanceMonitoring();\n\n        if (this.config.debug) {\n            // console.log(\"ScrollAnimationFramework initialized\", this.config);\n            this.startDebugPanel();\n        }\n\n        // Initial stats update\n        this.updateStats();\n    }\n\n    createObserver() {\n        const options = {\n            threshold: this.config.threshold,\n            rootMargin: this.config.rootMargin,\n        };\n\n        this.observer = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting && entry.intersectionRatio > 0.1) {\n                    this.handleElementAnimation(entry.target);\n                }\n            });\n        }, options);\n    }\n\n    scanForElements() {\n        // 1. Explicit animated elements\n        this.scanAnimatedElements();\n\n        // 2. Container-based elements\n        this.scanContainerElements();\n\n        // 3. Class-based auto-detection\n        this.scanClassBasedElements();\n\n        // Update stats\n        this.stats.totalElements = this.observedElements.size;\n    }\n\n    scanAnimatedElements() {\n        const elements = document.querySelectorAll(this.config.selectors.animated);\n        elements.forEach((element) => {\n            if (!element.matches(this.config.selectors.ignore)) {\n                this.prepareElement(element);\n                this.observer.observe(element);\n                this.observedElements.add(element);\n            }\n        });\n    }\n\n    scanContainerElements() {\n        const containers = document.querySelectorAll(\n            this.config.selectors.container\n        );\n        containers.forEach((container) => {\n            const children = Array.from(container.children);\n            const containerConfig = this.parseDataAttributes(\n                container,\n                \"scroll-container\"\n            );\n            const staggerDelay =\n                parseInt(containerConfig.stagger) || this.config.staggerDelay;\n\n            children.forEach((child, index) => {\n                const childConfig = {\n                    ...containerConfig,\n                    delay: (containerConfig.delay || 0) + index * staggerDelay,\n                };\n\n                this.prepareElement(child, childConfig);\n                this.observer.observe(child);\n                this.observedElements.add(child);\n            });\n        });\n    }\n\n    scanClassBasedElements() {\n        Object.entries(this.config.classMappings).forEach(([className, preset]) => {\n            const selector = `.${className}:not([data-scroll-animate]):not(${this.config.selectors.ignore})`;\n            const elements = document.querySelectorAll(selector);\n\n            elements.forEach((element) => {\n                const presetConfig = this.config.presets[preset] || {};\n                this.prepareElement(element, presetConfig);\n                this.observer.observe(element);\n                this.observedElements.add(element);\n            });\n        });\n    }\n\n    prepareElement(element, config = {}) {\n        if (element.dataset.scrollPrepared) return;\n\n        const elementConfig = {\n            ...this.parseDataAttributes(element, \"scroll\"),\n            ...config,\n        };\n\n        // Animation determination\n        const animation =\n            elementConfig.animation ||\n            elementConfig.animate ||\n            this.config.defaultAnimation;\n\n        // Preset check\n        if (this.config.presets[animation]) {\n            Object.assign(elementConfig, this.config.presets[animation]);\n        }\n\n        // Store config\n        element._scrollConfig = elementConfig;\n        element.dataset.scrollPrepared = \"true\";\n\n        // Set initial state\n        this.setInitialState(element);\n\n        // Debug log\n        // if (this.config.debug) {\n        //     console.log('Element prepared:', element, 'Config:', elementConfig);\n        // }\n    }\n\n    setInitialState(element) {\n        // Animate.css için gerekli base class\n        element.classList.add(\"animate__animated\");\n        \n        // Element'i gizle\n        element.style.opacity = \"0\";\n        element.style.visibility = \"visible\";\n        \n        // Mevcut animate__ animation classlarını temizle (animate__animated hariç)\n        const classes = Array.from(element.classList);\n        classes.forEach(className => {\n            if (className.startsWith('animate__') && className !== 'animate__animated') {\n                element.classList.remove(className);\n            }\n        });\n    }\n\n    handleElementAnimation(element) {\n        if (this.animatedElements.has(element)) return;\n\n        const startTime = performance.now();\n        const config = element._scrollConfig || {};\n\n        this.animateElement(element, config);\n        this.animatedElements.add(element);\n        this.observer.unobserve(element);\n\n        // Performance tracking\n        if (this.config.performanceMonitor) {\n            const endTime = performance.now();\n            this.stats.performanceMetrics.push(endTime - startTime);\n        }\n\n        this.stats.animatedCount++;\n\n        // Callback\n        if (this.config.onElementAnimated) {\n            this.config.onElementAnimated(element, config);\n        }\n\n        this.updateStats();\n\n        // if (this.config.debug) {\n        //     console.log('Element animated:', element, 'Config:', config);\n        // }\n    }\n\n    animateElement(element, config) {\n        const delay = parseInt(config.delay) || 0;\n        const duration = config.duration || this.config.defaultDuration;\n        let animation = config.animation || config.animate || this.config.defaultAnimation;\n\n        // Animate.css class isimlerini normalize et\n        if (!animation.startsWith('animate__')) {\n            animation = `animate__${animation}`;\n        }\n\n        // if (this.config.debug) {\n        //     console.log(`Animating element with:`, { animation, duration, delay });\n        // }\n\n        setTimeout(() => {\n            // Önce mevcut animation classlarını temizle (animate__animated hariç)\n            const classes = Array.from(element.classList);\n            classes.forEach(className => {\n                if (className.startsWith('animate__') && className !== 'animate__animated') {\n                    element.classList.remove(className);\n                }\n            });\n            \n            // CSS custom property ile duration ayarla\n            element.style.setProperty(\"--animate-duration\", duration);\n            \n            // Animation class'ını ekle\n            element.classList.add(animation);\n            \n            // Element'i görünür yap\n            element.style.opacity = \"1\";\n\n            // Animation complete handler\n            const handleAnimationEnd = (event) => {\n                // Event'in bu elementten geldiğini kontrol et\n                if (event.target !== element) return;\n                \n                // Cleanup\n                element.classList.add(\"scroll-animate-ready\");\n                this.handleAnimationComplete(element, config);\n                element.removeEventListener(\"animationend\", handleAnimationEnd);\n                \n                // if (this.config.debug) {\n                //     console.log('Animation completed for:', element);\n                // }\n            };\n\n            element.addEventListener(\"animationend\", handleAnimationEnd, { once: true });\n\n            // Fallback - eğer animationend event'i tetiklenmezse\n            const fallbackTimeout = this.parseDuration(duration) + 100;\n            setTimeout(() => {\n                if (!element.classList.contains(\"scroll-animate-ready\")) {\n                    element.classList.add(\"scroll-animate-ready\");\n                    this.handleAnimationComplete(element, config);\n                    \n                    // if (this.config.debug) {\n                    //     console.log('Animation completed via fallback for:', element);\n                    // }\n                }\n            }, fallbackTimeout);\n\n        }, delay);\n    }\n\n    // Helper method to parse duration string to milliseconds\n    parseDuration(durationStr) {\n        if (!durationStr) return 1000;\n        \n        const match = durationStr.toString().match(/(\\d*\\.?\\d+)(ms|s)?/);\n        if (!match) return 1000;\n        \n        const value = parseFloat(match[1]);\n        const unit = match[2] || 's';\n        \n        return unit === 'ms' ? value : value * 1000;\n    }\n\n    handleAnimationComplete(element, config) {\n        // Custom callback\n        if (config.callback && typeof window[config.callback] === \"function\") {\n            window[config.callback](element);\n        }\n\n        // Custom event\n        element.dispatchEvent(\n            new CustomEvent(\"scrollAnimationComplete\", {\n                detail: { element, config },\n            })\n        );\n\n        // Check if all animations are complete\n        if (\n            this.stats.animatedCount === this.stats.totalElements &&\n            this.config.onAllAnimationsComplete\n        ) {\n            this.config.onAllAnimationsComplete();\n        }\n    }\n\n    // Data attribute parsing - Animate.css uyumlu\n    parseDataAttributes(element, prefix) {\n        const config = {};\n        const dataset = element.dataset;\n        \n        // Direct mappings for common attributes\n        if (dataset.scrollAnimate) {\n            config.animation = dataset.scrollAnimate;\n        }\n        if (dataset.scrollAnimation) {\n            config.animation = dataset.scrollAnimation;\n        }\n        if (dataset.scrollDuration) {\n            config.duration = dataset.scrollDuration;\n        }\n        if (dataset.scrollDelay) {\n            config.delay = parseInt(dataset.scrollDelay) || 0;\n        }\n        if (dataset.scrollCallback) {\n            config.callback = dataset.scrollCallback;\n        }\n\n        // Generic parsing for other attributes\n        const camelPrefix = prefix.replace(/-([a-z])/g, (match, letter) => letter.toUpperCase());\n\n        Object.keys(dataset).forEach((key) => {\n            if (key.startsWith(camelPrefix) && key.length > camelPrefix.length) {\n                let configKey = key.slice(camelPrefix.length);\n                configKey = configKey.charAt(0).toLowerCase() + configKey.slice(1);\n                \n                const value = dataset[key];\n\n                // Skip if already processed\n                if (['animation', 'duration', 'delay', 'callback'].includes(configKey)) {\n                    return;\n                }\n\n                // Type conversion\n                if (value === \"true\") {\n                    config[configKey] = true;\n                } else if (value === \"false\") {\n                    config[configKey] = false;\n                } else if (!isNaN(value) && value !== \"\" && !value.includes('s')) {\n                    config[configKey] = Number(value);\n                } else {\n                    config[configKey] = value;\n                }\n                \n                // if (this.config.debug) {\n                //     console.log(`Parsed data attribute: ${key} -> ${configKey} = ${config[configKey]}`);\n                // }\n            }\n        });\n\n        return config;\n    }\n\n    setupMutationObserver() {\n        const mutationObserver = new MutationObserver((mutations) => {\n            let hasNewElements = false;\n\n            mutations.forEach((mutation) => {\n                mutation.addedNodes.forEach((node) => {\n                    if (node.nodeType === 1) {\n                        this.scanNewElement(node);\n                        hasNewElements = true;\n                    }\n                });\n            });\n\n            if (hasNewElements) {\n                this.updateStats();\n            }\n        });\n\n        mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true,\n        });\n    }\n\n    scanNewElement(element) {\n        // Check if element matches any selector\n        const selectors = [\n            this.config.selectors.animated,\n            this.config.selectors.container,\n            ...Object.keys(this.config.classMappings).map((cls) => `.${cls}`),\n        ];\n\n        selectors.forEach((selector) => {\n            if (element.matches && element.matches(selector)) {\n                this.prepareElement(element);\n                this.observer.observe(element);\n                this.observedElements.add(element);\n                this.stats.totalElements++;\n            }\n        });\n\n        // Scan children\n        selectors.forEach((selector) => {\n            const children = element.querySelectorAll(selector);\n            children.forEach((child) => {\n                if (!this.observedElements.has(child)) {\n                    this.prepareElement(child);\n                    this.observer.observe(child);\n                    this.observedElements.add(child);\n                    this.stats.totalElements++;\n                }\n            });\n        });\n    }\n\n    setupAccessibility() {\n        // Reduced motion support\n        const prefersReducedMotion = window.matchMedia(\n            \"(prefers-reduced-motion: reduce)\"\n        );\n\n        const handleReducedMotion = (e) => {\n            if (e.matches) {\n                document.documentElement.style.setProperty(\n                    \"--animate-duration\",\n                    \"0.01s\"\n                );\n                this.config.defaultDuration = \"0.01s\";\n\n                // Update all existing elements\n                this.observedElements.forEach((element) => {\n                    if (element._scrollConfig) {\n                        element._scrollConfig.duration = \"0.01s\";\n                    }\n                });\n            }\n        };\n\n        prefersReducedMotion.addEventListener(\"change\", handleReducedMotion);\n        handleReducedMotion(prefersReducedMotion);\n    }\n\n    setupPerformanceMonitoring() {\n        if (this.config.performanceMonitor) {\n            // Monitor frame rate\n            let lastTime = performance.now();\n            let frameCount = 0;\n\n            const measureFPS = () => {\n                frameCount++;\n                const currentTime = performance.now();\n\n                if (currentTime - lastTime >= 1000) {\n                    this.stats.fps = Math.round(\n                        (frameCount * 1000) / (currentTime - lastTime)\n                    );\n                    frameCount = 0;\n                    lastTime = currentTime;\n                }\n\n                requestAnimationFrame(measureFPS);\n            };\n\n            requestAnimationFrame(measureFPS);\n        }\n    }\n\n    startDebugPanel() {\n        const panel = document.getElementById(\"debugPanel\");\n        if (panel) {\n            panel.classList.add(\"active\");\n            this.updateDebugPanel();\n\n            // Update every second\n            setInterval(() => this.updateDebugPanel(), 1000);\n        }\n    }\n\n    updateDebugPanel() {\n        const observedEl = document.getElementById(\"observedCount\");\n        const animatedEl = document.getElementById(\"animatedCount\");\n        const performanceEl = document.getElementById(\"performanceInfo\");\n\n        if (observedEl) observedEl.textContent = this.stats.totalElements;\n        if (animatedEl) animatedEl.textContent = this.stats.animatedCount;\n        if (performanceEl) {\n            const avgTime =\n                this.stats.performanceMetrics.length > 0\n                    ? this.stats.performanceMetrics.reduce((a, b) => a + b, 0) /\n                    this.stats.performanceMetrics.length\n                    : 0;\n            performanceEl.textContent =\n                avgTime > 0 ? `${avgTime.toFixed(2)}ms avg` : \"Good\";\n        }\n    }\n\n    updateStats() {\n        if (this.config.debug) {\n            this.updateDebugPanel();\n        }\n    }\n\n    // Public API Methods\n    addElement(element, config = {}) {\n        this.prepareElement(element, config);\n        this.observer.observe(element);\n        this.observedElements.add(element);\n        this.stats.totalElements++;\n        this.updateStats();\n    }\n\n    removeElement(element) {\n        this.observer.unobserve(element);\n        this.animatedElements.delete(element);\n        this.observedElements.delete(element);\n        this.stats.totalElements--;\n        this.updateStats();\n    }\n\n    triggerAnimation(selector, config = {}) {\n        const elements = document.querySelectorAll(selector);\n        elements.forEach((element) => {\n            // Reset element\n            element.style.opacity = \"0\";\n            element.classList.add(\"animate__animated\");\n            \n            // Remove old animation classes\n            const classes = Array.from(element.classList);\n            classes.forEach(className => {\n                if (className.startsWith('animate__') && className !== 'animate__animated') {\n                    element.classList.remove(className);\n                }\n            });\n\n            // Apply new animation\n            this.prepareElement(element, config);\n            setTimeout(() => {\n                this.animateElement(element, element._scrollConfig);\n            }, 50);\n        });\n    }\n\n    resetAllAnimations() {\n        // Clear all animated elements\n        this.animatedElements.clear();\n        this.stats.animatedCount = 0;\n\n        // Reset all elements\n        this.observedElements.forEach((element) => {\n            element.style.opacity = \"0\";\n            element.classList.add(\"animate__animated\");\n            \n            // Remove animation classes except animate__animated\n            const classes = Array.from(element.classList);\n            classes.forEach(className => {\n                if (className.startsWith('animate__') && className !== 'animate__animated') {\n                    element.classList.remove(className);\n                }\n            });\n            \n            element.classList.remove(\"scroll-animate-ready\");\n            element.dataset.scrollPrepared = \"\";\n            delete element._scrollConfig;\n        });\n\n        // Re-scan and observe\n        this.observer.disconnect();\n        this.createObserver();\n        this.scanForElements();\n        this.updateStats();\n    }\n\n    updateConfig(newConfig) {\n        this.config = { ...this.config, ...newConfig };\n\n        // Re-initialize if needed\n        if (newConfig.threshold || newConfig.rootMargin) {\n            this.observer.disconnect();\n            this.createObserver();\n            this.scanForElements();\n        }\n\n        this.updateStats();\n    }\n\n    destroy() {\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n        this.animatedElements.clear();\n        this.observedElements.clear();\n        this.containerElements.clear();\n    }\n\n    // Utility methods\n    getStats() {\n        return {\n            ...this.stats,\n            config: this.config,\n            observedElements: this.observedElements.size,\n            animatedElements: this.animatedElements.size,\n        };\n    }\n\n    getElement(selector) {\n        const element = document.querySelector(selector);\n        return element\n            ? {\n                element,\n                isAnimated: this.animatedElements.has(element),\n                isObserved: this.observedElements.has(element),\n                config: element._scrollConfig,\n            }\n            : null;\n    }\n\n    pauseAnimations() {\n        document.documentElement.style.setProperty(\"--animate-duration\", \"0s\");\n    }\n\n    resumeAnimations() {\n        document.documentElement.style.removeProperty(\"--animate-duration\");\n    }\n}\n\n// Browser compatibility check\n// if (!window.IntersectionObserver) {\n//     console.warn(\"IntersectionObserver not supported. Please use a polyfill.\");\n// }\n\n// Global instance\nwindow.ScrollAnimationFramework = ScrollAnimationFramework;\n\n// Auto-initialization\nlet scrollAnimator;\n\nif (\n    document.querySelector(\"[data-scroll-auto-init]\") ||\n    window.SCROLL_ANIMATOR_AUTO_INIT !== false\n) {\n    scrollAnimator = new ScrollAnimationFramework({\n        debug: false,\n        performanceMonitor: true,\n        defaultAnimation: \"fadeInUp\",\n        staggerDelay: 150,\n        ...window.SCROLL_ANIMATOR_CONFIG,\n    });\n}\n\n// Global access\nwindow.scrollAnimator = scrollAnimator;\n\n// Utility functions for demo\nfunction toggleDebug() {\n    const panel = document.getElementById(\"debugPanel\");\n    if (panel) {\n        panel.classList.toggle(\"active\");\n    }\n}\n\n// Performance optimization\ndocument.addEventListener(\"visibilitychange\", () => {\n    if (document.hidden) {\n        scrollAnimator?.pauseAnimations();\n    } else {\n        scrollAnimator?.resumeAnimations();\n    }\n});\n\n// Export for module usage\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = ScrollAnimationFramework;\n}"]}