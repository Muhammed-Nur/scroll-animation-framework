{"version":3,"sources":["scroll-animation-framework.js"],"names":["ScrollAnimationFramework","constructor","this","config","_objectSpread","threshold","rootMargin","length","defaultDuration","defaultDelay","selectors","animated","performanceMonitor","trigger","ignore","bounce","animation","duration","flash","pulse","rubberBand","headShake","swing","jello","heartBeat","backInDown","backOutRight","backOutUp","bounceIn","bounceInUp","bounceOutDown","bounceOutLeft","fadeInDownBig","fadeInLeft","fadeInRightBig","fadeInTopRight","fadeInBottomLeft","fadeOut","backInLeft","fadeOutLeftBig","backInRight","fadeOutUpBig","fadeOutTopLeft","fadeOutBottomLeft","flipInY","backOutLeft","lightSpeedOutLeft","rotateInDownLeft","rotateInDownRight","rotateInUpLeft","bounceInDown","rotateOutUpLeft","bounceInLeft","slideInDown","bounceInRight","slideOutRight","slideOutUp","zoomInDown","zoomOutLeft","bounceOutRight","bounceOutUp","rollOut","slide-down","fadeInDown","elastic","hero-title","fadeInLeftBig","section-title","fadeInRight","arguments","undefined","observer","fadeInUpBig","Set","Map","stats","fadeInTopLeft","init","readyState","addEventListener","setup","fadeInBottomRight","setupAccessibility","fadeOutDown","debug","fadeOutDownBig","fadeOutLeft","createObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","intersectionRatio","fadeOutRightBig","handleElementAnimation","target","options","scanForElements","scanContainerElements","totalElements","observedElements","size","scanAnimatedElements","document","querySelectorAll","element","matches","observe","add","flipInX","container","children","Array","from","containerConfig","parseDataAttributes","staggerDelay","stagger","child","index","childConfig","delay","lightSpeedInRight","lightSpeedInLeft","scanClassBasedElements","lightSpeedOutRight","classMappings","_ref","let","className","preset","concat","selector","presetConfig","presets","prepareElement","rotateIn","dataset","scrollPrepared","elementConfig","animate","rotateInUpRight","defaultAnimation","Object","assign","_scrollConfig","rotateOutDownLeft","setInitialState","style","opacity","visibility","classList","slideInLeft","startsWith","remove","slideInRight","slideInUp","endTime","animatedElements","has","performance","now","slideOutDown","unobserve","performanceMetrics","push","startTime","animatedCount","onElementAnimated","zoomIn","animateElement","zoomInLeft","parseInt","zoomOut","setProperty","zoomOutUp","handleAnimationEnd","event","jackInTheBox","handleAnimationComplete","removeEventListener","once","fallbackTimeout","parseDuration","setTimeout","contains","durationStr","value","toString","match","parseFloat","attention","callback","window","detail","onAllAnimationsComplete","prefix","containerElements","scrollAnimate","scrollAnimation","scrollDuration","scrollDelay","scrollCallback","replace","letter","toUpperCase","setupMutationObserver","key","camelPrefix","setupPerformanceMonitoring","slice","configKey","charAt","toLowerCase","startDebugPanel","includes","isNaN","MutationObserver","mutations","hasNewElements","mutation","addedNodes","node","nodeType","scanNewElement","updateStats","keys","map","cls","elements","prefersReducedMotion","matchMedia","handleReducedMotion","e","documentElement","classes","measureFPS","currentTime","lastTime","fps","Math","round","requestAnimationFrame","panel","getElementById","updateDebugPanel","setInterval","observedEl","animatedEl","performanceEl","textContent","a","b","avgTime","toFixed","addElement","removeElement","delete","triggerAnimation","resetAllAnimations","disconnect","updateConfig","newConfig","destroy","getStats","getElement","Number","isAnimated","isObserved","pauseAnimations","resumeAnimations","scrollAnimator","toggleDebug","SCROLL_ANIMATOR_AUTO_INIT","SCROLL_ANIMATOR_CONFIG","_scrollAnimator","_scrollAnimator2","module","exports"],"mappings":"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","file":"scroll-animation-framework.min.js","sourcesContent":["/**\n * Advanced Scroll Animation Framework with Animate.css Integration\n * Modern, performant, and flexible scroll animation system\n * 000660010500115001090010500108001080009700104001050011400114000970010400109000970011000105001140011400097001040010500109\n */\nclass ScrollAnimationFramework {\n    constructor(config = {}) {\n        this.config = {\n            // Basic settings\n            threshold: [0, 0.1, 0.25, 0.5, 0.75, 1.0],\n            rootMargin: \"0px 0px -100px 0px\",\n\n            // Animation settings\n            defaultAnimation: \"fadeInUp\",\n            defaultDuration: \"1s\",\n            defaultDelay: 0,\n\n            // Stagger settings\n            staggerDelay: 150,\n\n            // Debug settings\n            debug: false,\n            performanceMonitor: false,\n\n            // Selectors\n            selectors: {\n                animated: \"[data-scroll-animate]\",\n                container: \"[data-scroll-container]\",\n                trigger: \"[data-scroll-trigger]\",\n                ignore: \"[data-scroll-ignore]\",\n            },\n\n            // Animation presets with correct Animate.css classes\n            presets: {\n                // Attention Seekers\n                bounce: { animation: \"bounce\", duration: \"1s\" },\n                flash: { animation: \"flash\", duration: \"1s\" },\n                pulse: { animation: \"pulse\", duration: \"1s\" },\n                rubberBand: { animation: \"rubberBand\", duration: \"1s\" },\n                shakeX: { animation: \"shakeX\", duration: \"1s\" },\n                shakeY: { animation: \"shakeY\", duration: \"1s\" },\n                headShake: { animation: \"headShake\", duration: \"1s\" },\n                swing: { animation: \"swing\", duration: \"1s\" },\n                tada: { animation: \"tada\", duration: \"1s\" },\n                wobble: { animation: \"wobble\", duration: \"1s\" },\n                jello: { animation: \"jello\", duration: \"1s\" },\n                heartBeat: { animation: \"heartBeat\", duration: \"1.3s\" },\n\n                // Back Entrances\n                backInDown: { animation: \"backInDown\", duration: \"1s\" },\n                backInLeft: { animation: \"backInLeft\", duration: \"1s\" },\n                backInRight: { animation: \"backInRight\", duration: \"1s\" },\n                backInUp: { animation: \"backInUp\", duration: \"1s\" },\n\n                // Back Exits\n                backOutDown: { animation: \"backOutDown\", duration: \"1s\" },\n                backOutLeft: { animation: \"backOutLeft\", duration: \"1s\" },\n                backOutRight: { animation: \"backOutRight\", duration: \"1s\" },\n                backOutUp: { animation: \"backOutUp\", duration: \"1s\" },\n\n                // Bouncing Entrances\n                bounceIn: { animation: \"bounceIn\", duration: \"0.75s\" },\n                bounceInDown: { animation: \"bounceInDown\", duration: \"1s\" },\n                bounceInLeft: { animation: \"bounceInLeft\", duration: \"1s\" },\n                bounceInRight: { animation: \"bounceInRight\", duration: \"1s\" },\n                bounceInUp: { animation: \"bounceInUp\", duration: \"1s\" },\n\n                // Bouncing Exits\n                bounceOut: { animation: \"bounceOut\", duration: \"0.75s\" },\n                bounceOutDown: { animation: \"bounceOutDown\", duration: \"1s\" },\n                bounceOutLeft: { animation: \"bounceOutLeft\", duration: \"1s\" },\n                bounceOutRight: { animation: \"bounceOutRight\", duration: \"1s\" },\n                bounceOutUp: { animation: \"bounceOutUp\", duration: \"1s\" },\n\n                // Fading Entrances\n                fadeIn: { animation: \"fadeIn\", duration: \"1s\" },\n                fadeInDown: { animation: \"fadeInDown\", duration: \"1s\" },\n                fadeInDownBig: { animation: \"fadeInDownBig\", duration: \"1.3s\" },\n                fadeInLeft: { animation: \"fadeInLeft\", duration: \"1s\" },\n                fadeInLeftBig: { animation: \"fadeInLeftBig\", duration: \"1.3s\" },\n                fadeInRight: { animation: \"fadeInRight\", duration: \"1s\" },\n                fadeInRightBig: { animation: \"fadeInRightBig\", duration: \"1.3s\" },\n                fadeInUp: { animation: \"fadeInUp\", duration: \"1s\" },\n                fadeInUpBig: { animation: \"fadeInUpBig\", duration: \"1.3s\" },\n                fadeInTopLeft: { animation: \"fadeInTopLeft\", duration: \"1s\" },\n                fadeInTopRight: { animation: \"fadeInTopRight\", duration: \"1s\" },\n                fadeInBottomLeft: { animation: \"fadeInBottomLeft\", duration: \"1s\" },\n                fadeInBottomRight: { animation: \"fadeInBottomRight\", duration: \"1s\" },\n\n                // Fading Exits\n                fadeOut: { animation: \"fadeOut\", duration: \"1s\" },\n                fadeOutDown: { animation: \"fadeOutDown\", duration: \"1s\" },\n                fadeOutDownBig: { animation: \"fadeOutDownBig\", duration: \"1.3s\" },\n                fadeOutLeft: { animation: \"fadeOutLeft\", duration: \"1s\" },\n                fadeOutLeftBig: { animation: \"fadeOutLeftBig\", duration: \"1.3s\" },\n                fadeOutRight: { animation: \"fadeOutRight\", duration: \"1s\" },\n                fadeOutRightBig: { animation: \"fadeOutRightBig\", duration: \"1.3s\" },\n                fadeOutUp: { animation: \"fadeOutUp\", duration: \"1s\" },\n                fadeOutUpBig: { animation: \"fadeOutUpBig\", duration: \"1.3s\" },\n                fadeOutTopLeft: { animation: \"fadeOutTopLeft\", duration: \"1s\" },\n                fadeOutTopRight: { animation: \"fadeOutTopRight\", duration: \"1s\" },\n                fadeOutBottomRight: { animation: \"fadeOutBottomRight\", duration: \"1s\" },\n                fadeOutBottomLeft: { animation: \"fadeOutBottomLeft\", duration: \"1s\" },\n\n                // Flippers\n                flip: { animation: \"flip\", duration: \"1s\" },\n                flipInX: { animation: \"flipInX\", duration: \"1s\" },\n                flipInY: { animation: \"flipInY\", duration: \"1s\" },\n                flipOutX: { animation: \"flipOutX\", duration: \"0.75s\" },\n                flipOutY: { animation: \"flipOutY\", duration: \"0.75s\" },\n\n                // Lightspeed\n                lightSpeedInRight: { animation: \"lightSpeedInRight\", duration: \"1s\" },\n                lightSpeedInLeft: { animation: \"lightSpeedInLeft\", duration: \"1s\" },\n                lightSpeedOutRight: { animation: \"lightSpeedOutRight\", duration: \"1s\" },\n                lightSpeedOutLeft: { animation: \"lightSpeedOutLeft\", duration: \"1s\" },\n\n                // Rotating Entrances\n                rotateIn: { animation: \"rotateIn\", duration: \"1s\" },\n                rotateInDownLeft: { animation: \"rotateInDownLeft\", duration: \"1s\" },\n                rotateInDownRight: { animation: \"rotateInDownRight\", duration: \"1s\" },\n                rotateInUpLeft: { animation: \"rotateInUpLeft\", duration: \"1s\" },\n                rotateInUpRight: { animation: \"rotateInUpRight\", duration: \"1s\" },\n\n                // Rotating Exits\n                rotateOut: { animation: \"rotateOut\", duration: \"1s\" },\n                rotateOutDownLeft: { animation: \"rotateOutDownLeft\", duration: \"1s\" },\n                rotateOutDownRight: { animation: \"rotateOutDownRight\", duration: \"1s\" },\n                rotateOutUpLeft: { animation: \"rotateOutUpLeft\", duration: \"1s\" },\n                rotateOutUpRight: { animation: \"rotateOutUpRight\", duration: \"1s\" },\n\n                // Sliding Entrances\n                slideInDown: { animation: \"slideInDown\", duration: \"1s\" },\n                slideInLeft: { animation: \"slideInLeft\", duration: \"1s\" },\n                slideInRight: { animation: \"slideInRight\", duration: \"1s\" },\n                slideInUp: { animation: \"slideInUp\", duration: \"1s\" },\n\n                // Sliding Exits\n                slideOutDown: { animation: \"slideOutDown\", duration: \"1s\" },\n                slideOutLeft: { animation: \"slideOutLeft\", duration: \"1s\" },\n                slideOutRight: { animation: \"slideOutRight\", duration: \"1s\" },\n                slideOutUp: { animation: \"slideOutUp\", duration: \"1s\" },\n\n                // Zooming Entrances\n                zoomIn: { animation: \"zoomIn\", duration: \"1s\" },\n                zoomInDown: { animation: \"zoomInDown\", duration: \"1s\" },\n                zoomInLeft: { animation: \"zoomInLeft\", duration: \"1s\" },\n                zoomInRight: { animation: \"zoomInRight\", duration: \"1s\" },\n                zoomInUp: { animation: \"zoomInUp\", duration: \"1s\" },\n\n                // Zooming Exits\n                zoomOut: { animation: \"zoomOut\", duration: \"1s\" },\n                zoomOutDown: { animation: \"zoomOutDown\", duration: \"1.5s\" },\n                zoomOutLeft: { animation: \"zoomOutLeft\", duration: \"1s\" },\n                zoomOutRight: { animation: \"zoomOutRight\", duration: \"1s\" },\n                zoomOutUp: { animation: \"zoomOutUp\", duration: \"1s\" },\n\n                // Specials\n                hinge: { animation: \"hinge\", duration: \"2s\" },\n                jackInTheBox: { animation: \"jackInTheBox\", duration: \"1s\" },\n                rollIn: { animation: \"rollIn\", duration: \"1s\" },\n                rollOut: { animation: \"rollOut\", duration: \"1s\" },\n\n                // Common shortcuts for easier usage\n                fade: { animation: \"fadeIn\", duration: \"0.8s\" },\n                \"slide-up\": { animation: \"fadeInUp\", duration: \"0.8s\" },\n                \"slide-down\": { animation: \"fadeInDown\", duration: \"0.8s\" },\n                \"slide-left\": { animation: \"fadeInLeft\", duration: \"0.8s\" },\n                \"slide-right\": { animation: \"fadeInRight\", duration: \"0.8s\" },\n                zoom: { animation: \"zoomIn\", duration: \"0.6s\" },\n                elastic: { animation: \"bounceIn\", duration: \"1.2s\" },\n                attention: { animation: \"pulse\", duration: \"1s\" },\n                jack: { animation: \"jackInTheBox\", duration: \"1s\" },\n            },\n\n            // Auto class detection mappings\n            classMappings: {\n                card: \"slide-up\",\n                \"hero-title\": \"fade\",\n                \"stats-item\": \"bounce\",\n                \"feature-box\": \"slide-left\",\n                testimonial: \"slide-right\",\n                \"section-title\": \"slide-down\",\n                button: \"bounce\",\n                \"demo-card\": \"zoom\",\n            },\n\n            // Callbacks\n            onElementAnimated: null,\n            onAllAnimationsComplete: null,\n\n            ...config,\n        };\n\n        this.observer = null;\n        this.animatedElements = new Set();\n        this.observedElements = new Set();\n        this.containerElements = new Map();\n        this.stats = {\n            totalElements: 0,\n            animatedCount: 0,\n            performanceMetrics: [],\n        };\n\n        this.init();\n    }\n\n    init() {\n        if (document.readyState === \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", () => this.setup());\n        } else {\n            this.setup();\n        }\n    }\n\n    setup() {\n        this.createObserver();\n        this.scanForElements();\n        this.setupMutationObserver();\n        this.setupAccessibility();\n        this.setupPerformanceMonitoring();\n\n        if (this.config.debug) {\n            // console.log(\"ScrollAnimationFramework initialized\", this.config);\n            this.startDebugPanel();\n        }\n\n        // Initial stats update\n        this.updateStats();\n    }\n\n    createObserver() {\n        const options = {\n            threshold: this.config.threshold,\n            rootMargin: this.config.rootMargin,\n        };\n\n        this.observer = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting && entry.intersectionRatio > 0.1) {\n                    this.handleElementAnimation(entry.target);\n                }\n            });\n        }, options);\n    }\n\n    scanForElements() {\n        // 1. Explicit animated elements\n        this.scanAnimatedElements();\n\n        // 2. Container-based elements\n        this.scanContainerElements();\n\n        // 3. Class-based auto-detection\n        this.scanClassBasedElements();\n\n        // Update stats\n        this.stats.totalElements = this.observedElements.size;\n    }\n\n    scanAnimatedElements() {\n        const elements = document.querySelectorAll(this.config.selectors.animated);\n        elements.forEach((element) => {\n            if (!element.matches(this.config.selectors.ignore)) {\n                this.prepareElement(element);\n                this.observer.observe(element);\n                this.observedElements.add(element);\n            }\n        });\n    }\n\n    scanContainerElements() {\n        const containers = document.querySelectorAll(\n            this.config.selectors.container\n        );\n        containers.forEach((container) => {\n            const children = Array.from(container.children);\n            const containerConfig = this.parseDataAttributes(\n                container,\n                \"scroll-container\"\n            );\n            const staggerDelay =\n                parseInt(containerConfig.stagger) || this.config.staggerDelay;\n\n            children.forEach((child, index) => {\n                const childConfig = {\n                    ...containerConfig,\n                    delay: (containerConfig.delay || 0) + index * staggerDelay,\n                };\n\n                this.prepareElement(child, childConfig);\n                this.observer.observe(child);\n                this.observedElements.add(child);\n            });\n        });\n    }\n\n    scanClassBasedElements() {\n        Object.entries(this.config.classMappings).forEach(([className, preset]) => {\n            const selector = `.${className}:not([data-scroll-animate]):not(${this.config.selectors.ignore})`;\n            const elements = document.querySelectorAll(selector);\n\n            elements.forEach((element) => {\n                const presetConfig = this.config.presets[preset] || {};\n                this.prepareElement(element, presetConfig);\n                this.observer.observe(element);\n                this.observedElements.add(element);\n            });\n        });\n    }\n\n    prepareElement(element, config = {}) {\n        if (element.dataset.scrollPrepared) return;\n\n        const elementConfig = {\n            ...this.parseDataAttributes(element, \"scroll\"),\n            ...config,\n        };\n\n        // Animation determination\n        const animation =\n            elementConfig.animation ||\n            elementConfig.animate ||\n            this.config.defaultAnimation;\n\n        // Preset check\n        if (this.config.presets[animation]) {\n            Object.assign(elementConfig, this.config.presets[animation]);\n        }\n\n        // Store config\n        element._scrollConfig = elementConfig;\n        element.dataset.scrollPrepared = \"true\";\n\n        // Set initial state\n        this.setInitialState(element);\n\n        // Debug log\n        // if (this.config.debug) {\n        //     console.log('Element prepared:', element, 'Config:', elementConfig);\n        // }\n    }\n\n    setInitialState(element) {\n        // Animate.css için gerekli base class\n        element.classList.add(\"animate__animated\");\n        \n        // Element'i gizle\n        element.style.opacity = \"0\";\n        element.style.visibility = \"visible\";\n        \n        // Mevcut animate__ animation classlarını temizle (animate__animated hariç)\n        const classes = Array.from(element.classList);\n        classes.forEach(className => {\n            if (className.startsWith('animate__') && className !== 'animate__animated') {\n                element.classList.remove(className);\n            }\n        });\n    }\n\n    handleElementAnimation(element) {\n        if (this.animatedElements.has(element)) return;\n\n        const startTime = performance.now();\n        const config = element._scrollConfig || {};\n\n        this.animateElement(element, config);\n        this.animatedElements.add(element);\n        this.observer.unobserve(element);\n\n        // Performance tracking\n        if (this.config.performanceMonitor) {\n            const endTime = performance.now();\n            this.stats.performanceMetrics.push(endTime - startTime);\n        }\n\n        this.stats.animatedCount++;\n\n        // Callback\n        if (this.config.onElementAnimated) {\n            this.config.onElementAnimated(element, config);\n        }\n\n        this.updateStats();\n\n        // if (this.config.debug) {\n        //     console.log('Element animated:', element, 'Config:', config);\n        // }\n    }\n\n    animateElement(element, config) {\n        const delay = parseInt(config.delay) || 0;\n        const duration = config.duration || this.config.defaultDuration;\n        let animation = config.animation || config.animate || this.config.defaultAnimation;\n\n        // Animate.css class isimlerini normalize et\n        if (!animation.startsWith('animate__')) {\n            animation = `animate__${animation}`;\n        }\n\n        // if (this.config.debug) {\n        //     console.log(`Animating element with:`, { animation, duration, delay });\n        // }\n\n        setTimeout(() => {\n            // Önce mevcut animation classlarını temizle (animate__animated hariç)\n            const classes = Array.from(element.classList);\n            classes.forEach(className => {\n                if (className.startsWith('animate__') && className !== 'animate__animated') {\n                    element.classList.remove(className);\n                }\n            });\n            \n            // CSS custom property ile duration ayarla\n            element.style.setProperty(\"--animate-duration\", duration);\n            \n            // Animation class'ını ekle\n            element.classList.add(animation);\n            \n            // Element'i görünür yap\n            element.style.opacity = \"1\";\n\n            // Animation complete handler\n            const handleAnimationEnd = (event) => {\n                // Event'in bu elementten geldiğini kontrol et\n                if (event.target !== element) return;\n                \n                // Cleanup\n                element.classList.add(\"scroll-animate-ready\");\n                this.handleAnimationComplete(element, config);\n                element.removeEventListener(\"animationend\", handleAnimationEnd);\n                \n                // if (this.config.debug) {\n                //     console.log('Animation completed for:', element);\n                // }\n            };\n\n            element.addEventListener(\"animationend\", handleAnimationEnd, { once: true });\n\n            // Fallback - eğer animationend event'i tetiklenmezse\n            const fallbackTimeout = this.parseDuration(duration) + 100;\n            setTimeout(() => {\n                if (!element.classList.contains(\"scroll-animate-ready\")) {\n                    element.classList.add(\"scroll-animate-ready\");\n                    this.handleAnimationComplete(element, config);\n                    \n                    // if (this.config.debug) {\n                    //     console.log('Animation completed via fallback for:', element);\n                    // }\n                }\n            }, fallbackTimeout);\n\n        }, delay);\n    }\n\n    // Helper method to parse duration string to milliseconds\n    parseDuration(durationStr) {\n        if (!durationStr) return 1000;\n        \n        const match = durationStr.toString().match(/(\\d*\\.?\\d+)(ms|s)?/);\n        if (!match) return 1000;\n        \n        const value = parseFloat(match[1]);\n        const unit = match[2] || 's';\n        \n        return unit === 'ms' ? value : value * 1000;\n    }\n\n    handleAnimationComplete(element, config) {\n        // Custom callback\n        if (config.callback && typeof window[config.callback] === \"function\") {\n            window[config.callback](element);\n        }\n\n        // Custom event\n        element.dispatchEvent(\n            new CustomEvent(\"scrollAnimationComplete\", {\n                detail: { element, config },\n            })\n        );\n\n        // Check if all animations are complete\n        if (\n            this.stats.animatedCount === this.stats.totalElements &&\n            this.config.onAllAnimationsComplete\n        ) {\n            this.config.onAllAnimationsComplete();\n        }\n    }\n\n    // Data attribute parsing - Animate.css uyumlu\n    parseDataAttributes(element, prefix) {\n        const config = {};\n        const dataset = element.dataset;\n        \n        // Direct mappings for common attributes\n        if (dataset.scrollAnimate) {\n            config.animation = dataset.scrollAnimate;\n        }\n        if (dataset.scrollAnimation) {\n            config.animation = dataset.scrollAnimation;\n        }\n        if (dataset.scrollDuration) {\n            config.duration = dataset.scrollDuration;\n        }\n        if (dataset.scrollDelay) {\n            config.delay = parseInt(dataset.scrollDelay) || 0;\n        }\n        if (dataset.scrollCallback) {\n            config.callback = dataset.scrollCallback;\n        }\n\n        // Generic parsing for other attributes\n        const camelPrefix = prefix.replace(/-([a-z])/g, (match, letter) => letter.toUpperCase());\n\n        Object.keys(dataset).forEach((key) => {\n            if (key.startsWith(camelPrefix) && key.length > camelPrefix.length) {\n                let configKey = key.slice(camelPrefix.length);\n                configKey = configKey.charAt(0).toLowerCase() + configKey.slice(1);\n                \n                const value = dataset[key];\n\n                // Skip if already processed\n                if (['animation', 'duration', 'delay', 'callback'].includes(configKey)) {\n                    return;\n                }\n\n                // Type conversion\n                if (value === \"true\") {\n                    config[configKey] = true;\n                } else if (value === \"false\") {\n                    config[configKey] = false;\n                } else if (!isNaN(value) && value !== \"\" && !value.includes('s')) {\n                    config[configKey] = Number(value);\n                } else {\n                    config[configKey] = value;\n                }\n                \n                // if (this.config.debug) {\n                //     console.log(`Parsed data attribute: ${key} -> ${configKey} = ${config[configKey]}`);\n                // }\n            }\n        });\n\n        return config;\n    }\n\n    setupMutationObserver() {\n        const mutationObserver = new MutationObserver((mutations) => {\n            let hasNewElements = false;\n\n            mutations.forEach((mutation) => {\n                mutation.addedNodes.forEach((node) => {\n                    if (node.nodeType === 1) {\n                        this.scanNewElement(node);\n                        hasNewElements = true;\n                    }\n                });\n            });\n\n            if (hasNewElements) {\n                this.updateStats();\n            }\n        });\n\n        mutationObserver.observe(document.body, {\n            childList: true,\n            subtree: true,\n        });\n    }\n\n    scanNewElement(element) {\n        // Check if element matches any selector\n        const selectors = [\n            this.config.selectors.animated,\n            this.config.selectors.container,\n            ...Object.keys(this.config.classMappings).map((cls) => `.${cls}`),\n        ];\n\n        selectors.forEach((selector) => {\n            if (element.matches && element.matches(selector)) {\n                this.prepareElement(element);\n                this.observer.observe(element);\n                this.observedElements.add(element);\n                this.stats.totalElements++;\n            }\n        });\n\n        // Scan children\n        selectors.forEach((selector) => {\n            const children = element.querySelectorAll(selector);\n            children.forEach((child) => {\n                if (!this.observedElements.has(child)) {\n                    this.prepareElement(child);\n                    this.observer.observe(child);\n                    this.observedElements.add(child);\n                    this.stats.totalElements++;\n                }\n            });\n        });\n    }\n\n    setupAccessibility() {\n        // Reduced motion support\n        const prefersReducedMotion = window.matchMedia(\n            \"(prefers-reduced-motion: reduce)\"\n        );\n\n        const handleReducedMotion = (e) => {\n            if (e.matches) {\n                document.documentElement.style.setProperty(\n                    \"--animate-duration\",\n                    \"0.01s\"\n                );\n                this.config.defaultDuration = \"0.01s\";\n\n                // Update all existing elements\n                this.observedElements.forEach((element) => {\n                    if (element._scrollConfig) {\n                        element._scrollConfig.duration = \"0.01s\";\n                    }\n                });\n            }\n        };\n\n        prefersReducedMotion.addEventListener(\"change\", handleReducedMotion);\n        handleReducedMotion(prefersReducedMotion);\n    }\n\n    setupPerformanceMonitoring() {\n        if (this.config.performanceMonitor) {\n            // Monitor frame rate\n            let lastTime = performance.now();\n            let frameCount = 0;\n\n            const measureFPS = () => {\n                frameCount++;\n                const currentTime = performance.now();\n\n                if (currentTime - lastTime >= 1000) {\n                    this.stats.fps = Math.round(\n                        (frameCount * 1000) / (currentTime - lastTime)\n                    );\n                    frameCount = 0;\n                    lastTime = currentTime;\n                }\n\n                requestAnimationFrame(measureFPS);\n            };\n\n            requestAnimationFrame(measureFPS);\n        }\n    }\n\n    startDebugPanel() {\n        const panel = document.getElementById(\"debugPanel\");\n        if (panel) {\n            panel.classList.add(\"active\");\n            this.updateDebugPanel();\n\n            // Update every second\n            setInterval(() => this.updateDebugPanel(), 1000);\n        }\n    }\n\n    updateDebugPanel() {\n        const observedEl = document.getElementById(\"observedCount\");\n        const animatedEl = document.getElementById(\"animatedCount\");\n        const performanceEl = document.getElementById(\"performanceInfo\");\n\n        if (observedEl) observedEl.textContent = this.stats.totalElements;\n        if (animatedEl) animatedEl.textContent = this.stats.animatedCount;\n        if (performanceEl) {\n            const avgTime =\n                this.stats.performanceMetrics.length > 0\n                    ? this.stats.performanceMetrics.reduce((a, b) => a + b, 0) /\n                    this.stats.performanceMetrics.length\n                    : 0;\n            performanceEl.textContent =\n                avgTime > 0 ? `${avgTime.toFixed(2)}ms avg` : \"Good\";\n        }\n    }\n\n    updateStats() {\n        if (this.config.debug) {\n            this.updateDebugPanel();\n        }\n    }\n\n    // Public API Methods\n    addElement(element, config = {}) {\n        this.prepareElement(element, config);\n        this.observer.observe(element);\n        this.observedElements.add(element);\n        this.stats.totalElements++;\n        this.updateStats();\n    }\n\n    removeElement(element) {\n        this.observer.unobserve(element);\n        this.animatedElements.delete(element);\n        this.observedElements.delete(element);\n        this.stats.totalElements--;\n        this.updateStats();\n    }\n\n    triggerAnimation(selector, config = {}) {\n        const elements = document.querySelectorAll(selector);\n        elements.forEach((element) => {\n            // Reset element\n            element.style.opacity = \"0\";\n            element.classList.add(\"animate__animated\");\n            \n            // Remove old animation classes\n            const classes = Array.from(element.classList);\n            classes.forEach(className => {\n                if (className.startsWith('animate__') && className !== 'animate__animated') {\n                    element.classList.remove(className);\n                }\n            });\n\n            // Apply new animation\n            this.prepareElement(element, config);\n            setTimeout(() => {\n                this.animateElement(element, element._scrollConfig);\n            }, 50);\n        });\n    }\n\n    resetAllAnimations() {\n        // Clear all animated elements\n        this.animatedElements.clear();\n        this.stats.animatedCount = 0;\n\n        // Reset all elements\n        this.observedElements.forEach((element) => {\n            element.style.opacity = \"0\";\n            element.classList.add(\"animate__animated\");\n            \n            // Remove animation classes except animate__animated\n            const classes = Array.from(element.classList);\n            classes.forEach(className => {\n                if (className.startsWith('animate__') && className !== 'animate__animated') {\n                    element.classList.remove(className);\n                }\n            });\n            \n            element.classList.remove(\"scroll-animate-ready\");\n            element.dataset.scrollPrepared = \"\";\n            delete element._scrollConfig;\n        });\n\n        // Re-scan and observe\n        this.observer.disconnect();\n        this.createObserver();\n        this.scanForElements();\n        this.updateStats();\n    }\n\n    updateConfig(newConfig) {\n        this.config = { ...this.config, ...newConfig };\n\n        // Re-initialize if needed\n        if (newConfig.threshold || newConfig.rootMargin) {\n            this.observer.disconnect();\n            this.createObserver();\n            this.scanForElements();\n        }\n\n        this.updateStats();\n    }\n\n    destroy() {\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n        this.animatedElements.clear();\n        this.observedElements.clear();\n        this.containerElements.clear();\n    }\n\n    // Utility methods\n    getStats() {\n        return {\n            ...this.stats,\n            config: this.config,\n            observedElements: this.observedElements.size,\n            animatedElements: this.animatedElements.size,\n        };\n    }\n\n    getElement(selector) {\n        const element = document.querySelector(selector);\n        return element\n            ? {\n                element,\n                isAnimated: this.animatedElements.has(element),\n                isObserved: this.observedElements.has(element),\n                config: element._scrollConfig,\n            }\n            : null;\n    }\n\n    pauseAnimations() {\n        document.documentElement.style.setProperty(\"--animate-duration\", \"0s\");\n    }\n\n    resumeAnimations() {\n        document.documentElement.style.removeProperty(\"--animate-duration\");\n    }\n}\n\n// Browser compatibility check\n// if (!window.IntersectionObserver) {\n//     console.warn(\"IntersectionObserver not supported. Please use a polyfill.\");\n// }\n\n// Global instance\nwindow.ScrollAnimationFramework = ScrollAnimationFramework;\n\n// Auto-initialization\nlet scrollAnimator;\n\nif (\n    document.querySelector(\"[data-scroll-auto-init]\") ||\n    window.SCROLL_ANIMATOR_AUTO_INIT !== false\n) {\n    scrollAnimator = new ScrollAnimationFramework({\n        debug: false,\n        performanceMonitor: true,\n        defaultAnimation: \"fadeInUp\",\n        staggerDelay: 150,\n        ...window.SCROLL_ANIMATOR_CONFIG,\n    });\n}\n\n// Global access\nwindow.scrollAnimator = scrollAnimator;\n\n// Utility functions for demo\nfunction toggleDebug() {\n    const panel = document.getElementById(\"debugPanel\");\n    if (panel) {\n        panel.classList.toggle(\"active\");\n    }\n}\n\n// Performance optimization\ndocument.addEventListener(\"visibilitychange\", () => {\n    if (document.hidden) {\n        scrollAnimator?.pauseAnimations();\n    } else {\n        scrollAnimator?.resumeAnimations();\n    }\n});\n\n// Export for module usage\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = ScrollAnimationFramework;\n}"]}